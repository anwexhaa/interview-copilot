// src/data/blind75Slugs.ts
export const blind75Slugs = [
  "two-sum",
  "best-time-to-buy-and-sell-stock",
  "contains-duplicate",
  "product-of-array-except-self",
  "maximum-subarray",
  "maximum-product-subarray",
  "find-minimum-in-rotated-sorted-array",
  "search-in-rotated-sorted-array",
  "3sum",
  "container-with-most-water",
  "climbing-stairs",
  "coin-change",
  "longest-increasing-subsequence",
  "longest-common-subsequence",
  "word-break",
  "combination-sum",
  "house-robber",
  "house-robber-ii",
  "decode-ways",
  "unique-paths",
  "jump-game",
  "clone-graph",
  "course-schedule",
  "pacific-atlantic-water-flow",
  "number-of-islands",
  "longest-consecutive-sequence",
  "alien-dictionary",
  "graph-valid-tree",
  "number-of-connected-components-in-an-undirected-graph",
  "merge-two-sorted-lists",
  "reorder-list",
  "remove-nth-node-from-end-of-list",
  "copy-list-with-random-pointer",
  "linked-list-cycle",
  "reverse-linked-list",
  "binary-search",
  "implement-trie-prefix-tree",
  "design-add-and-search-words-data-structure",
  "word-search-ii",
  "median-of-two-sorted-arrays",
  "kth-largest-element-in-an-array",
  "top-k-frequent-elements",
  "find-the-median-of-a-row-wise-sorted-matrix",
  "binary-tree-inorder-traversal",
  "validate-binary-search-tree",
  "lowest-common-ancestor-of-a-binary-search-tree",
  "binary-tree-level-order-traversal",
  "binary-tree-right-side-view",
  "count-good-nodes-in-binary-tree",
  "construct-binary-tree-from-preorder-and-inorder-traversal",
  "populating-next-right-pointers-in-each-node",
  "subtree-of-another-tree",
  "diameter-of-binary-tree",
  "balanced-binary-tree",
  "same-tree",
  "invert-binary-tree",
  "maximum-depth-of-binary-tree",
  "path-sum",
  "sum-root-to-leaf-numbers",
  "lowest-common-ancestor-of-a-binary-tree",
  "serialize-and-deserialize-binary-tree",
  "insert-interval",
  "merge-intervals",
  "non-overlapping-intervals",
  "meeting-rooms",
  "meeting-rooms-ii",
  "rotate-image",
  "spiral-matrix",
  "set-matrix-zeroes",
  "word-search",
  "longest-substring-without-repeating-characters",
  "longest-repeating-character-replacement",
  "minimum-window-substring",
  "valid-anagram",
  "group-anagrams",
  "valid-parentheses",
  "valid-palindrome",
  "longest-palindromic-substring",
  "palindromic-substrings",
  "encode-and-decode-strings",
  "maximum-depth-of-n-ary-tree",
  "employee-importance"
];
